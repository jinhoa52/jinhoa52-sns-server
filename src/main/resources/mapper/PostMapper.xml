<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.koobin.snsserver.mapper.PostMapper">

  <insert id="post" parameterType="me.koobin.snsserver.model.PostInfo" useGeneratedKeys="true"
    keyProperty="id">
    INSERT INTO post
    ( content
    , user_id)
    VALUES ( #{content}
           , #{userId});

  </insert>

  <insert id="savePostImage">
    insert into post_file
    (post_id
    , file_id)
    values
    <foreach collection="fileIds" separator="," item="fileId">
      ( #{postId}
      , #{fileId} )
    </foreach>
  </insert>

  <update id="update" parameterType="me.koobin.snsserver.model.PatchPostInfo">
    update post
    set content = #{content}
    where id = #{postId}
  </update>
  <delete id="deletePostFile">
    delete from post_file
    where post_id = #{postId} and file_id in
    <foreach collection="fileIds" item="fileId" index="index" separator="," open="(" close=")">
      #{fileId}
    </foreach>
  </delete>

  <delete id="deletePostFileAndFile">

    delete
    from post_file
    where post_id = #{postId}
  </delete>
  <delete id="deleteFileOfPost" parameterType="long">
    update file
    set DELETE_FLAG = 1
    where id in (select file_id from post_file where post_id = #{postId});
  </delete>
  <delete id="deletePostFileBy" parameterType="long">
    delete
    from post_file
    where post_id = #{postId};
  </delete>
  <delete id="deletePostBy" parameterType="long">
    delete
    from post
    where id = #{postId};
  </delete>

  <resultMap id="postWithFile" type="me.koobin.snsserver.model.PostFileInfo">
    <id column="post_id" property="id"/>
    <result column="user_id" property="userId"/>
    <result column="content" property="content"/>
    <collection property="postFiles" ofType="me.koobin.snsserver.model.PostFile">
      <result column="path" property="path"/>
      <result column="file_id" property="fileId"/>
    </collection>
  </resultMap>


  <select id="getPost" resultMap="postWithFile" parameterType="long">
    select p.id         post_id
         , p.content as content
         , p.user_id as user_id
         , f.path    as path
         , f.ID      as file_id
    from post p
           left join post_file pf on p.id = pf.post_id
           left join file f on f.ID = pf.file_id and f.delete_flag = 0
    where p.id = #{postId};
  </select>

  <select id="findByUserId" resultMap="postWithFile" parameterType="long">
    select p.id         post_id
         , p.content as content
         , p.user_id as user_id
         , f.path    as path
         , f.ID      as file_id
    from post p
           left join post_file pf on p.id = pf.post_id
           left join file f on f.ID = pf.file_id and f.delete_flag = 0
    where p.user_id = #{userId};
  </select>

  <select id="sameAuthor" resultType="java.lang.Boolean">
    select exists(select * from post where ID = #{postId} and user_id = #{userId})
  </select>
</mapper>